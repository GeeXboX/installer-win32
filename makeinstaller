#!/bin/sh
BUILD=build
SOURCES=sources

GRUB4DOS=grub4dos-0.4.4-2008-11-19-src
GRUB4DOS_URL=http://download.gna.org/grub4dos/$GRUB4DOS.zip
SYSLINUX=syslinux-3.72
SYSLINUX_URL=http://www.kernel.org/pub/linux/utils/boot/syslinux/$SYSLINUX.tar.bz2
NSIS=nsis-2.42
NSIS_URL=http://prdownloads.sourceforge.net/nsis/$NSIS.zip
NSIS_SRC_URL=http://prdownloads.sourceforge.net/nsis/$NSIS-src.tar.bz2
SCONS=scons-1.1.0.d20081207
SCONS_URL=http://prdownloads.sourceforge.net/scons/$SCONS.tar.gz
LIBARCHIVE=libarchive-2.4.12
LIBARCHIVE_BIN_URL=http://prdownloads.sourceforge.net/gnuwin32/$LIBARCHIVE-bin.zip
LIBARCHIVE_DEP_URL=http://prdownloads.sourceforge.net/gnuwin32/$LIBARCHIVE-dep.zip
TOOLS_GENERATOR=tools-generator
TOOLS_GENERATOR_URL=http://geexbox.org/src/devel/$TOOLS_GENERATOR-win32-10.tar.bz2

mkdir -p $SOURCES
mkdir -p $BUILD

# unpack syslinux
[ -r $SOURCES/$SYSLINUX.tar.bz2 ] || \
  wget -O $SOURCES/$SYSLINUX.tar.bz2 $SYSLINUX_URL
[ -d $BUILD/$SYSLINUX ] || tar xjf $SOURCES/$SYSLINUX.tar.bz2 -C $BUILD

# build grub4dos
[ -r $SOURCES/$GRUB4DOS.zip ] || \
  wget -O $SOURCES/$GRUB4DOS.zip $GRUB4DOS_URL
if [ ! -d $BUILD/$GRUB4DOS ]; then
  unzip -x $SOURCES/$GRUB4DOS.zip -d $BUILD
  cd $BUILD/$GRUB4DOS
  patch -p1 < ../../grub4dos-geexbox.diff || exit 1
  ./configure --enable-preset-menu=../../preset_menu.lst
  make -C stage2 grldr grldr.mbr grub.exe
  cd ../..
fi

# unpack bsdtar
[ -r $SOURCES/$LIBARCHIVE-bin.zip ] || \
  wget -O $SOURCES/$LIBARCHIVE-bin.zip $LIBARCHIVE_BIN_URL
[ -r $SOURCES/$LIBARCHIVE-dep.zip ] || \
  wget -O $SOURCES/$LIBARCHIVE-dep.zip $LIBARCHIVE_DEP_URL
if [ ! -d $BUILD/$LIBARCHIVE ]; then
  mkdir -p $BUILD/$LIBARCHIVE
  unzip -x $SOURCES/$LIBARCHIVE-bin.zip -d $BUILD/$LIBARCHIVE
  unzip -x $SOURCES/$LIBARCHIVE-dep.zip -d $BUILD/$LIBARCHIVE
fi

# unpack tools-generator
[ -r $SOURCES/$TOOLS_GENERATOR.tar.bz2 ] || \
  wget -O $SOURCES/$TOOLS_GENERATOR.tar.bz2 $TOOLS_GENERATOR_URL
[ -d $BUILD/$TOOLS_GENERATOR ] || \
  tar xjf $SOURCES/$TOOLS_GENERATOR.tar.bz2 -C $BUILD

# unpack nsis
[ -r $SOURCES/$NSIS.zip ] || \
  wget -O $SOURCES/$NSIS.zip $NSIS_URL
[ -d $BUILD/$NSIS ] || unzip -x $SOURCES/$NSIS.zip -d $BUILD

# build scons
[ -r $SOURCES/$SCONS.tar.gz ] || \
  wget -O $SOURCES/$SCONS.tar.gz $SCONS_URL
if [ ! -d $BUILD/$SCONS ]; then 
  tar xzf $SOURCES/$SCONS.tar.gz -C $BUILD
  cd "$BUILD/$SCONS"
  python setup.py install --prefix="$PWD" || exit 1
  cd ../..
fi

# build makensis
[ -r $SOURCES/$NSIS-src.tar.bz2 ] || \
  wget -O $SOURCES/$NSIS-src.tar.bz2 $NSIS_SRC_URL
if [ ! -d $BUILD/$NSIS-src ]; then
  tar xjf $SOURCES/$NSIS-src.tar.bz2 -C $BUILD
  cd "$BUILD/$NSIS-src"
  ../$SCONS/bin/scons SKIPSTUBS=all SKIPPLUGINS=all SKIPUTILS=all SKIPMISC=all NSIS_CONFIG_CONST_DATA=no PREFIX="$PWD" install-compiler || exit 1
  cd ../..
fi

# build installer
if [ ! -d $BUILD/installer ]; then
  mkdir -p $BUILD/installer
  cp $BUILD/$SYSLINUX/win32/syslinux.exe $BUILD/installer
  cp $BUILD/$GRUB4DOS/stage2/grldr $BUILD/installer/gxldr
  cp $BUILD/$GRUB4DOS/stage2/grldr.mbr $BUILD/installer/gxldr.mbr
  cp $BUILD/$GRUB4DOS/stage2/grub.exe $BUILD/installer/gxgrub.exe
  cp $BUILD/$LIBARCHIVE/bin/bsdtar.exe $BUILD/installer
  cp $BUILD/$LIBARCHIVE/bin/*.dll $BUILD/installer
  cp $BUILD/$TOOLS_GENERATOR/win32/mkzftree.exe $BUILD/installer
  cp geexbox.nsi $BUILD/installer
  cp res/* $BUILD/installer
fi
if [ ! -r installer.exe ]; then
  cd $BUILD/installer
  rm -f installer.exe
  NSISDIR=../$NSIS ../$NSIS-src/bin/makensis geexbox.nsi
  cp installer.exe ../..
fi

