#!/bin/sh -e
BUILD=build
SOURCES=sources

GRUB4DOS=grub4dos-0.4.4
GRUB4DOS_URL=http://download.gna.org/grub4dos/$GRUB4DOS-src.zip
SYSLINUX=syslinux-4.04
SYSLINUX_URL=http://www.kernel.org/pub/linux/utils/boot/syslinux/$SYSLINUX.tar.bz2
NSIS=nsis-2.46
NSIS_URL=http://prdownloads.sourceforge.net/nsis/$NSIS.zip
NSIS_SRC_URL=http://prdownloads.sourceforge.net/nsis/$NSIS-src.tar.bz2
SCONS=scons-1.1.0.d20081207
SCONS_URL=http://prdownloads.sourceforge.net/scons/$SCONS.tar.gz
LIBARCHIVE=libarchive-2.4.12
LIBARCHIVE_BIN_URL=http://prdownloads.sourceforge.net/gnuwin32/$LIBARCHIVE-bin.zip
LIBARCHIVE_DEP_URL=http://prdownloads.sourceforge.net/gnuwin32/$LIBARCHIVE-dep.zip
LZMA_SDK=lzma457
LZMA_SDK_URL=http://prdownloads.sourceforge.net/sevenzip/$LZMA_SDK.tar.bz2
UCL=ucl-1.03
UCL_URL=http://www.oberhumer.com/opensource/ucl/download/$UCL.tar.gz
UPX=upx-3.03
UPX_URL=http://upx.sourceforge.net/download/$UPX-src.tar.bz2

mkdir -p $SOURCES
mkdir -p $BUILD

# unpack syslinux
[ -r $SOURCES/$SYSLINUX.tar.bz2 ] || \
  wget -O $SOURCES/$SYSLINUX.tar.bz2 $SYSLINUX_URL
if [ ! -r $BUILD/$SYSLINUX/win32/syslinux.exe ]; then
  rm -rf $BUILD/$SYSLINUX
  tar xjf $SOURCES/$SYSLINUX.tar.bz2 -C $BUILD
fi

# build grub4dos
[ -r $SOURCES/$GRUB4DOS.zip ] || \
  wget -O $SOURCES/$GRUB4DOS.zip $GRUB4DOS_URL
if [ ! -r $BUILD/$GRUB4DOS/stage2/grldr ]; then
  rm -rf $BUILD/$GRUB4DOS
  unzip -x $SOURCES/$GRUB4DOS.zip -d $BUILD
  cd $BUILD/$GRUB4DOS
  patch -p1 < ../../grub4dos-geexbox.diff
  sh ./configure --enable-preset-menu=../../preset_menu.lst
  make -C stage2 grldr grldr.mbr grub.exe
  cd ../..
fi

# unpack bsdtar
[ -r $SOURCES/$LIBARCHIVE-bin.zip ] || \
  wget -O $SOURCES/$LIBARCHIVE-bin.zip $LIBARCHIVE_BIN_URL
[ -r $SOURCES/$LIBARCHIVE-dep.zip ] || \
  wget -O $SOURCES/$LIBARCHIVE-dep.zip $LIBARCHIVE_DEP_URL
if [ ! -d $BUILD/$LIBARCHIVE ]; then
  mkdir -p $BUILD/$LIBARCHIVE
  unzip -x $SOURCES/$LIBARCHIVE-bin.zip -d $BUILD/$LIBARCHIVE
  unzip -x $SOURCES/$LIBARCHIVE-dep.zip -d $BUILD/$LIBARCHIVE
fi

# unpack nsis
[ -r $SOURCES/$NSIS.zip ] || \
  wget -O $SOURCES/$NSIS.zip $NSIS_URL
[ -d $BUILD/$NSIS ] || unzip -x $SOURCES/$NSIS.zip -d $BUILD

# build scons
[ -r $SOURCES/$SCONS.tar.gz ] || \
  wget -O $SOURCES/$SCONS.tar.gz $SCONS_URL
if [ ! -d $BUILD/$SCONS ]; then 
  tar xzf $SOURCES/$SCONS.tar.gz -C $BUILD
  cd "$BUILD/$SCONS"
  python setup.py install --prefix="$PWD" || exit 1
  cd ../..
fi

# build makensis
[ -r $SOURCES/$NSIS-src.tar.bz2 ] || \
  wget -O $SOURCES/$NSIS-src.tar.bz2 $NSIS_SRC_URL
if [ ! -d $BUILD/$NSIS-src ]; then
  tar xjf $SOURCES/$NSIS-src.tar.bz2 -C $BUILD
  cd "$BUILD/$NSIS-src"
  ../$SCONS/bin/scons SKIPSTUBS=all SKIPPLUGINS=all SKIPUTILS=all SKIPMISC=all NSIS_CONFIG_CONST_DATA=no PREFIX="$PWD" install-compiler || exit 1
  cd ../..
fi

# unpack LZMA SDK
[ -r $SOURCES/$LZMA_SDK.tar.bz2 ] || \
  wget -O $SOURCES/$LZMA_SDK.tar.bz2 $LZMA_SDK_URL
if [ ! -d $BUILD/$LZMA_SDK ]; then
  mkdir $BUILD/$LZMA_SDK
  tar xjf $SOURCES/$LZMA_SDK.tar.bz2 -C $BUILD/$LZMA_SDK
fi

# build UCL
[ -r $SOURCES/$UCL.tar.gz ] || \
  wget -O $SOURCES/$UCL.tar.gz $UCL_URL
if [ ! -d $BUILD/$UCL ]; then
  tar xzf $SOURCES/$UCL.tar.gz -C $BUILD
  cd $BUILD/$UCL
  ./configure --enable-static --disable-shared --disable-dependency-tracking
  make
  cd ../..
fi

# build UPX
[ -r $SOURCES/$UPX-src.tar.bz2 ] || \
  wget -O $SOURCES/$UPX-src.tar.bz2 $UPX_URL
if [ ! -d $BUILD/$UPX-src ]; then
  tar xjf $SOURCES/$UPX-src.tar.bz2 -C $BUILD
  cd $BUILD/$UPX-src/src
  UPX_UCLDIR=../../$UCL UPX_LZMADIR=../../$LZMA_SDK make
  cd ../../..
fi

# build installer
if [ ! -d $BUILD/installer ]; then
  mkdir -p $BUILD/installer
  cp $BUILD/$SYSLINUX/win32/syslinux.exe $BUILD/installer
  cp $BUILD/$GRUB4DOS/stage2/grldr $BUILD/installer/gxldr
  cp $BUILD/$GRUB4DOS/stage2/grldr.mbr $BUILD/installer/gxldr.mbr
  cp $BUILD/$GRUB4DOS/stage2/grub.exe $BUILD/installer/gxgrub.exe
  cp $BUILD/$LIBARCHIVE/bin/bsdtar.exe $BUILD/installer
  cp $BUILD/$LIBARCHIVE/bin/*.dll $BUILD/installer
  cp geexbox.nsi $BUILD/installer
  cp res/* $BUILD/installer
fi
if [ ! -r geexbox-win32-installer*.exe ]; then
  cd $BUILD/installer
  rm -f geexbox-win32-installer*.exe
  PATH=../$UPX-src/src:$PATH NSISDIR=../$NSIS \
    ../$NSIS-src/bin/makensis geexbox.nsi
  cp geexbox-win32-installer*.exe ../..
fi

